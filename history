ls -l /some/directory | grep '^d' | awk '{print $9}' | sort | uniq | wc -l | xargs -I{} echo "Number of unique directories: {}"
pipes
pipes
anything
anything
builtin
builtin
echo hello
wc -l hello world
wc -l hello world
pwd
ls
pwd
ls
ls -l
ls
ls -l
ls -a | grep hello
ls -l
ls -a | grep hello
ls -a | grep bash
ls -a | grep hello
ls -a | grep bash
ls -a | grep unbash
üüa parse parse
clear
parse this "an apostrophe fucks things up it's not ideal" 
clear
parse this "an apostrophe fucks things up it's not ideal" 
oh wait no it "doesn't ah but it will fuck things up here it's true"
parse this "an apostrophe fucks things up it's not ideal" 
oh wait no it "doesn't ah but it will fuck things up here it's true"
oh wait no it "doesn't ah but it will fuck things up here" it's true
oh wait no it "doesn't ah but it will fuck things up here it's true"
oh wait no it "doesn't ah but it will fuck things up here" it's true
" huh' this is weird" dont see what happen' bloody hell
oh wait no it "doesn't ah but it will fuck things up here" it's true
" huh' this is weird" dont see what happen' bloody hell
fuck
" huh' this is weird" dont see what happen' bloody hell
fuck
ok
fuck
ok
" how about ' this " " if this workes' every' thhing' is fine"
ok
" how about ' this " " if this workes' every' thhing' is fine"
" how about ' this " " if this workes' every' thhing is fine"
" how about ' this " " if this workes' every' thhing' is fine"
" how about ' this " " if this workes' every' thhing is fine"
" how about ' this " " if this workes' every thhing is fine"
" how about ' this " " if this workes' every' thhing is fine"
" how about ' this " " if this workes' every thhing is fine"
" how about ' this " " if this workes every thhing is fine"
" how about ' this " " if this workes' every thhing is fine"
" how about ' this " " if this workes every thhing is fine"
" how about '' this " " if this workes every thhing is fine"
clear
echo -n -n mooooooooo
moooo
clear
cd sdfhjksd
ls
cd -
pwd
pipes
" so a ' is going to mess things up" as eveything here will be in one block
clear
cd -
ls
ls
pwd
pipes
"is the apostrophe ' still gon fuck us up"  let us find out
"how about now ' is" the apos still dooming us
"normal wks" 
"normal wks" 
no
"normal wks" 
no
fuch
"normal qts etc"
"normal qts etc"
no
"sdjfkldj ' jsdfjk" jdjd kldfkl d
"dkfskld' skldjfklsjd" one two
"dkfskld' skldjfklsjd" one two
"dkfskld' 'sk'ld'j'f'''k'lsjd" one two
"dkfskld' skldjfklsjd" one two
"dkfskld' 'sk'ld'j'f'''k'lsjd" one two
'dk"fs " kldskl d "jfklsjd' one two
"dkfskld' 'sk'ld'j'f'''k'lsjd" one two
'dk"fs " kldskl d "jfklsjd' one two
"$one"
"$one"
"$one"
$one
pipes


ls�-l
ls�-l
tee�>(cat�-n)
echo
a�b�c�dello
a�b�"c dello"
ab�"c hello
(hello)
(�hello�world�)
(hello�world)
dskflk \\ sdf
dsjflk | kdsjfk > dkfskj | < jdhsfkj
sdfhkjf | jkdhsfjkh < dsjhfkj | djkshfkjs > kjhsdfkjsd
dsfjj | jdsfkj | jhsdfjkh < hdsjfhjs > jdhsfkjh | jshdfj
sdhjksh | sdjfjk > skjdfjk | < fkjsdhf | >> sdkjhfksdh | << hdskjfhjsk
one
one
$one
$one
$one
$one $two $three
< redir command | cmd args | cmd args >> file
< redir command | cmd args | cmd args >> file
< redir command | cmd args | cmd args >> file
< redir command | cmd args | cmd args >> file
ksjflk | ksjhdfkj kjsdhfjk kjhsdjkfh |
dskfjdslkj | jsdkhfkjh |
dsfhdsjk | jsdhfjkh |
sjdklfj | ksjdfkj | jkhsdkj
sjdklfj | ksjdfkj | jkhsdkj
sjdklfj | ksjdfkj | jkhsdkj | jksfjks | kjhsjfkh
dsjfkhdk sdfklsdjkl kljsdflk kljsdflkj | sdhfkjh 
dsjfkhdk sdfklsdjkl kljsdflk kljsdflkj | sdhfkjh 
dsjfkhdk sdfklsdjkl kljsdflk kljsdflkj | sdhfkjh sdfois\
djkfskj sdfkjskl hskdjhfjk kjhdksjf | jhsdjkf
skdjfldk | skdjflksj lksjdkl | jkhdfs
sdjfk | sjdhfkjs jksdhkjs sdkjhfs | jkhsdkfjh
< file one | one two three | one > fileout
< filein cmd | cmd arg1 arg2 | cmd > fileout
< filein cmd | cmd arg1 arg2 | cmd > fileout
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf

kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf

kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | >> fileout
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | sjkdhks fhfhf
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | >> fileout
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | >> fileout
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
<< filein kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
<< filein kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
< filein kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
<< filein kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
< filein kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | > fileout
< filein kljs | sjdfdlkjs | hsdkfjhjk kjshdf kjhsdkf kjhsdkfj jkhsdfk kjshdkf kjshdfjk kjshdfk | >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg2 | cmd arg1 | cmd >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg2 | cmd arg1 | cmd >> fileout
< filein cmd | cmd arg1 arg2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | < filenow cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | < filenow cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg 2 | < filenow cmd "arg1 other things" | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg2 | cmd arg1 | cmd arg1 >> fileout
< filein cmd | cmd arg1 arg2 | cmd arg1 | cmd arg1 >> fileout
clear
find /var/log -type f -name "*.log" -exec grep -i "error" {} + | awk '{print $1, $2, $3, $NF}' | sort | uniq -c | sort -nr | head -n 20
clear
find /var/log -type f -name "*.log" -exec grep -i "error" {} + | awk '{print $1, $2, $3, $NF}' | sort | uniq -c | sort -nr | head -n 20
find /var/log -type f -name "*.log" -exec grep -i "error" {} + | awk '{print $1, $2, $3, $NF}' | sort | uniq -c | sort -nr | head -n 20
find /var/log -type f -name "*.log" -exec grep -i "error" {} + | awk '{print $1, $2, $3, $NF}' | sort | uniq -c | sort -nr | head -n 20
clear
grep -r --include="*.conf" "server" /etc/nginx | sed 's/#.*//' | awk -F'[ ;]' '{print $2}' | sort | uniq | xargs -I {} grep -H {} /etc/hosts
grep -r --include="*.conf" "server" /etc/nginx | sed 's/#.*//' | awk -F'[ ;]' '{print $2}' | sort | uniq | xargs -I {} grep -H {} /etc/hosts
clear
top -b -n 1 | grep -E '^(%Cpu|KiB Mem|Tasks)' | awk '{print $1, $2, $3}' | paste - - - | column -t
clear
 | grep -E '^(%Cpu|KiB Mem|Tasks)' | awk '{print $1, $2, $3}' | paste - - - | column -t
top -b < filein -n 1 | grep -E '^(%Cpu|KiB Mem|Tasks)' | awk '{print $1, $2, $3}' | paste - - - | column -t
